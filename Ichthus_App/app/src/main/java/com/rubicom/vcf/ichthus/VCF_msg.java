// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: umsg.proto
package com.rubicom.vcf.ichthus;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * ////////////header(should be added before send)////////////////
 * /////////// { type, size } ///////////////////////////////
 */
public final class VCF_msg extends Message<VCF_msg, VCF_msg.Builder> {
    public static final ProtoAdapter<VCF_msg> ADAPTER = new ProtoAdapter_VCF_msg();

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT__SEQNO = 0;

    public static final Integer DEFAULT__RESULT = 0;

    public static final String DEFAULT__RESPONSE = "";

    public static final Integer DEFAULT__OWNER = 0;

    public static final String DEFAULT__NAME = "";

    public static final Integer DEFAULT__C_ID = 0;

    public static final Integer DEFAULT__P_ID = 0;

    public static final Integer DEFAULT__VALUE = 0;

    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer _seqNo;

    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer _version;

    @WireField(
            tag = 3,
            adapter = "com.squareup.wire.ProtoAdapter#INT32"
    )
    public final Integer _result;

    @WireField(
            tag = 4,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String _msg;


    @WireField(
            tag = 5,
            adapter = "com.rubicom.vcf.ichthus.VCF_msg$Cmd#ADAPTER",
            label = WireField.Label.REPEATED
    )
    public final List<Cmd> cmd;

    @WireField(
            tag = 6,
            adapter = "com.rubicom.vcf.ichthus.VCF_msg$Prm#ADAPTER",
            label = WireField.Label.REPEATED
    )
    public final List<Prm> prm;

    @WireField(
            tag = 7,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer _cycle;



    public VCF_msg(Integer _seqNo, Integer _version, Integer _result, String _msg,
                   List<Cmd> cmd,List<Prm> prm, Integer _cycle) {
        this(_seqNo, _version, _result, _msg, cmd, prm,_cycle,ByteString.EMPTY);
    }

    public VCF_msg(Integer _seqNo, Integer _version, Integer _result, String _msg,
                   List<Cmd> cmd,List<Prm> prm, Integer _cycle, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this._seqNo = _seqNo;
        this._version = _version;
        this._result = _result;
        this._msg = _msg;
        this.cmd = Internal.immutableCopyOf("cmd", cmd);
        this.prm = Internal.immutableCopyOf("prm", prm);
        this._cycle = _cycle;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder._seqNo = _seqNo;
        builder._version = _version;
        builder._result = _result;
        builder._msg = _msg;
        builder.cmd = Internal.copyOf("cmd", cmd);
        builder.prm = Internal.copyOf("prm", prm);
        builder._cycle = _cycle;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof VCF_msg)) return false;
        VCF_msg o = (VCF_msg) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(_seqNo, o._seqNo)
                && Internal.equals(_version, o._version)
                && Internal.equals(_result, o._result)
                && Internal.equals(_msg, o._msg)
                && cmd.equals(o.cmd)
                && prm.equals(o.prm)
                && Internal.equals(_cycle, o._cycle);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (_seqNo != null ? _seqNo.hashCode() : 0);
            result = result * 37 + (_version != null ? _version.hashCode() : 0);
            result = result * 37 + (_result != null ? _result.hashCode() : 0);
            result = result * 37 + (_msg != null ? _msg.hashCode() : 0);
            result = result * 37 + cmd.hashCode();
            result = result * 37 + prm.hashCode();
            result = result * 37 + (_cycle != null ? _cycle.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (_seqNo != null) builder.append(", _seqNo=").append(_seqNo);
        if (_version != null) builder.append(", _version=").append(_version);
        if (_result != null) builder.append(", _result=").append(_result);
        if (!cmd.isEmpty()) builder.append(", cmd=").append(cmd);
        if (!prm.isEmpty()) builder.append(", prm=").append(prm);
        if (_cycle != null) builder.append(", _cycle=").append(_cycle);
        return builder.replace(0, 2, "VCF_msg{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<VCF_msg, Builder> {
        public Integer _seqNo;

        public Integer _version;

        public Integer _result;

        public String _msg;

        public List<Cmd> cmd;

        public List<Prm> prm;

        public Integer _cycle;

        public Builder() {
            cmd = Internal.newMutableList();
            prm = Internal.newMutableList();
        }

        public Builder _seqNo(Integer _seqNo) {
            this._seqNo = _seqNo;
            return this;
        }

        public Builder _version(Integer _version) {
            this._version = _version;
            return this;
        }

        public Builder _result(Integer _result) {
            this._result = _result;
            return this;
        }

        public Builder _msg(String _msg) {
            this._msg = _msg;
            return this;
        }

        public Builder cmd(List<Cmd> cmd) {
            Internal.checkElementsNotNull(cmd);
            this.cmd = cmd;
            return this;
        }

        public Builder prm(List<Prm> prm) {
            Internal.checkElementsNotNull(prm);
            this.prm = prm;
            return this;
        }

        public Builder _cycle(Integer _cycle) {
            this._cycle = _cycle;
            return this;
        }

        @Override
        public VCF_msg build() {
            return new VCF_msg(_seqNo, _version, _result, _msg, cmd, prm,_cycle, super.buildUnknownFields());
        }
    }

    public static final class Cmd extends Message<Cmd, Cmd.Builder> {
        public static final ProtoAdapter<Cmd> ADAPTER = new ProtoAdapter_Cmd();

        private static final long serialVersionUID = 0L;

        public static final Integer DEFAULT__FROME= 0;

        public static final Integer DEFAULT__NAME= 0;

        public static final Integer DEFAULT__VARID= 0;

        @WireField(
                tag = 1,
                adapter = "com.squareup.wire.ProtoAdapter#UINT32"
        )
        public final Integer _from;

        @WireField(
                tag = 2,
                adapter = "com.squareup.wire.ProtoAdapter#STRING"
        )
        public final String _name;

        @WireField(
                tag = 3,
                adapter = "com.squareup.wire.ProtoAdapter#UINT32"
        )
        public final Integer _varid;


        @WireField(
                tag = 4,
                adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
        )
        public final Double _value;

        public Cmd(Integer _from, String _name, Integer _varid, Double _value) {
            this(_from,_name,_varid,_value,ByteString.EMPTY);
        }

        public Cmd(Integer _from, String _name, Integer _varid, Double _value,ByteString unknownFields) {
            super(ADAPTER, unknownFields);
            this._from = _from;
            this._name = _name;
            this._varid = _varid;
            this._value = _value;
        }

        @Override
        public Builder newBuilder() {
            Builder builder = new Builder();
            builder._from = _from;
            builder._name = _name;
            builder._varid = _varid;
            builder._value = _value;
            builder.addUnknownFields(unknownFields());
            return builder;
        }

        @Override
        public boolean equals(Object other) {
            if (other == this) return true;
            if (!(other instanceof Cmd)) return false;
            Cmd o = (Cmd) other;
            return unknownFields().equals(o.unknownFields())
                    && Internal.equals(_from, o._from)
                    && Internal.equals(_name, o._name)
                    && Internal.equals(_varid, o._varid)
                    && Internal.equals(_value, o._value);
        }

        @Override
        public int hashCode() {
            int result = super.hashCode;
            if (result == 0) {
                result = unknownFields().hashCode();
                result = result * 37 + (_from != null ? _from.hashCode() : 0);
                result = result * 37 + (_name != null ? _name.hashCode() : 0);
                result = result * 37 + (_varid != null ? _varid.hashCode() : 0);
                result = result * 37 + (_value != null ? _value.hashCode() : 0);
                super.hashCode = result;
            }
            return result;
        }

        @Override
        public String toString() {
            StringBuilder builder = new StringBuilder();
            if (_from != null) builder.append(", _from=").append(_from);
            if (_name != null) builder.append(", _name=").append(_name);
            if (_varid != null) builder.append(", _varid=").append(_varid);
            if (_value != null) builder.append(", _value=").append(_value);
            return builder.replace(0, 2, "Cmd{").append('}').toString();
        }

        public static final class Builder extends Message.Builder<Cmd, Builder> {
            public Integer _from;

            public String _name;

            public Integer _varid;

            public Double _value;

            public Builder() {
            }

            public Builder _from(Integer _from) {
                this._from = _from;
                return this;
            }

            public Builder _name(String _name) {
                this._name = _name;
                return this;
            }

            public Builder _varid(Integer _varid) {
                this._varid = _varid;
                return this;
            }

            public Builder _value(Double _value) {
                this._value = _value;
                return this;
            }

            @Override
            public Cmd build() {
                return new Cmd(_from, _name,_varid,_value, super.buildUnknownFields());
            }
        }

        private static final class ProtoAdapter_Cmd extends ProtoAdapter<Cmd> {
            public ProtoAdapter_Cmd() {
                super(FieldEncoding.LENGTH_DELIMITED, Cmd.class);
            }

            @Override
            public int encodedSize(Cmd value) {
                return ProtoAdapter.UINT32.encodedSizeWithTag(1, value._from)
                        + ProtoAdapter.STRING.encodedSizeWithTag(2, value._name)
                        + ProtoAdapter.UINT32.encodedSizeWithTag(3, value._varid)
                        + ProtoAdapter.DOUBLE.encodedSizeWithTag(4, value._value)
                        + value.unknownFields().size();
            }

            @Override
            public void encode(ProtoWriter writer, Cmd value) throws IOException {
                ProtoAdapter.UINT32.encodeWithTag(writer, 1, value._from);
                ProtoAdapter.STRING.encodeWithTag(writer, 2, value._name);
                ProtoAdapter.UINT32.encodeWithTag(writer, 3, value._varid);
                ProtoAdapter.DOUBLE.encodeWithTag(writer, 4, value._value);
                writer.writeBytes(value.unknownFields());
            }

            @Override
            public Cmd decode(ProtoReader reader) throws IOException {
                Builder builder = new Builder();
                long token = reader.beginMessage();
                for (int tag; (tag = reader.nextTag()) != -1;) {
                    switch (tag) {
                        case 1: builder._from(ProtoAdapter.UINT32.decode(reader)); break;
                        case 2: builder._name(ProtoAdapter.STRING.decode(reader)); break;
                        case 3: builder._varid(ProtoAdapter.UINT32.decode(reader)); break;
                        case 4: builder._value(ProtoAdapter.DOUBLE.decode(reader)); break;
                        default: {
                            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                            builder.addUnknownField(tag, fieldEncoding, value);
                        }
                    }
                }
                reader.endMessage(token);
                return builder.build();
            }

            @Override
            public Cmd redact(Cmd value) {
                Builder builder = value.newBuilder();
                builder.clearUnknownFields();
                return builder.build();
            }
        }
    }

    public static final class Prm extends Message<Prm, Prm.Builder> {
        public static final ProtoAdapter<Prm> ADAPTER = new ProtoAdapter_Prm();

        private static final long serialVersionUID = 0L;

        public static final Integer DEFAULT__TYPE = 0;

        public static final Integer DEFAULT__MIN = 0;

        public static final Integer DEFAULT__MAX = 0;

        @WireField(
                tag = 1,
                adapter = "com.squareup.wire.ProtoAdapter#UINT32"
        )
        public final Integer _vartype;

        @WireField(
                tag = 2,
                adapter = "com.squareup.wire.ProtoAdapter#INT32"
        )
        public final Integer _min;

        @WireField(
                tag = 3,
                adapter = "com.squareup.wire.ProtoAdapter#INT32"
        )
        public final Integer _max;

        public Prm(Integer _vartype, Integer _min, Integer _max) {
            this(_vartype, _min, _max, ByteString.EMPTY);
        }

        public Prm(Integer _vartype, Integer _min, Integer _max, ByteString unknownFields) {
            super(ADAPTER, unknownFields);
            this._vartype = _vartype;
            this._min = _min;
            this._max = _max;
        }

        @Override
        public Builder newBuilder() {
            Builder builder = new Builder();
            builder._vartype = _vartype;
            builder._min = _min;
            builder._max = _max;
            builder.addUnknownFields(unknownFields());
            return builder;
        }

        @Override
        public boolean equals(Object other) {
            if (other == this) return true;
            if (!(other instanceof Prm)) return false;
            Prm o = (Prm) other;
            return unknownFields().equals(o.unknownFields())
                    && Internal.equals(_vartype, o._vartype)
                    && Internal.equals(_min, o._min)
                    && Internal.equals(_max, o._max);
        }

        @Override
        public int hashCode() {
            int result = super.hashCode;
            if (result == 0) {
                result = unknownFields().hashCode();
                result = result * 37 + (_vartype != null ? _vartype.hashCode() : 0);
                result = result * 37 + (_min != null ? _min.hashCode() : 0);
                result = result * 37 + (_max != null ? _max.hashCode() : 0);
                super.hashCode = result;
            }
            return result;
        }

        @Override
        public String toString() {
            StringBuilder builder = new StringBuilder();
            if (_vartype != null) builder.append(", _vartype=").append(_vartype);
            if (_min != null) builder.append(", _min=").append(_min);
            if (_max != null) builder.append(", _max=").append(_max);
            return builder.replace(0, 2, "Prm{").append('}').toString();
        }

        public static final class Builder extends Message.Builder<Prm, Builder> {
            public Integer _vartype;

            public Integer _min;

            public Integer _max;

            public Builder() {
            }

            public Builder _vartype(Integer _vartype) {
                this._vartype = _vartype;
                return this;
            }

            public Builder _min(Integer _min) {
                this._min = _min;
                return this;
            }

            public Builder _max(Integer _max) {
                this._max = _max;
                return this;
            }

            @Override
            public Prm build() {
                return new Prm(_vartype, _min, _max, super.buildUnknownFields());
            }
        }

        private static final class ProtoAdapter_Prm extends ProtoAdapter<Prm> {
            public ProtoAdapter_Prm() {
                super(FieldEncoding.LENGTH_DELIMITED, Prm.class);
            }

            @Override
            public int encodedSize(Prm value) {
                return ProtoAdapter.UINT32.encodedSizeWithTag(1, value._vartype)
                        + ProtoAdapter.INT32.encodedSizeWithTag(2, value._min)
                        + ProtoAdapter.INT32.encodedSizeWithTag(3, value._max)
                        + value.unknownFields().size();
            }

            @Override
            public void encode(ProtoWriter writer, Prm value) throws IOException {
                ProtoAdapter.UINT32.encodeWithTag(writer, 1, value._vartype);
                ProtoAdapter.INT32.encodeWithTag(writer, 2, value._min);
                ProtoAdapter.INT32.encodeWithTag(writer, 3, value._max);
                writer.writeBytes(value.unknownFields());
            }

            @Override
            public Prm decode(ProtoReader reader) throws IOException {
                Builder builder = new Builder();
                long token = reader.beginMessage();
                for (int tag; (tag = reader.nextTag()) != -1;) {
                    switch (tag) {
                        case 1: builder._vartype(ProtoAdapter.UINT32.decode(reader)); break;
                        case 2: builder._min(ProtoAdapter.INT32.decode(reader)); break;
                        case 3: builder._max(ProtoAdapter.INT32.decode(reader)); break;
                        default: {
                            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                            builder.addUnknownField(tag, fieldEncoding, value);
                        }
                    }
                }
                reader.endMessage(token);
                return builder.build();
            }

            @Override
            public Prm redact(Prm value) {
                Builder builder = value.newBuilder();
                builder.clearUnknownFields();
                return builder.build();
            }
        }
    }

    private static final class ProtoAdapter_VCF_msg extends ProtoAdapter<VCF_msg> {
        public ProtoAdapter_VCF_msg() {
            super(FieldEncoding.LENGTH_DELIMITED, VCF_msg.class);
        }

        @Override
        public int encodedSize(VCF_msg value) {
            return ProtoAdapter.UINT32.encodedSizeWithTag(1, value._seqNo)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(2, value._version)
                    + ProtoAdapter.INT32.encodedSizeWithTag(3, value._result)
                    + ProtoAdapter.STRING.encodedSizeWithTag(4, value._msg)
                    + Cmd.ADAPTER.asRepeated().encodedSizeWithTag(5, value.cmd)
                    + Prm.ADAPTER.asRepeated().encodedSizeWithTag(6, value.prm)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(7, value._cycle)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, VCF_msg value) throws IOException {
            ProtoAdapter.UINT32.encodeWithTag(writer, 1, value._seqNo);
            ProtoAdapter.UINT32.encodeWithTag(writer, 2, value._version);
            ProtoAdapter.INT32.encodeWithTag(writer, 3, value._result);
            ProtoAdapter.STRING.encodeWithTag(writer, 4, value._msg);
            Cmd.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.cmd);
            Prm.ADAPTER.asRepeated().encodeWithTag(writer, 6, value.prm);
            ProtoAdapter.UINT32.encodeWithTag(writer, 7, value._cycle);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public VCF_msg decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1;) {
                switch (tag) {
                    case 1: builder._seqNo(ProtoAdapter.UINT32.decode(reader)); break;
                    case 2: builder._version(ProtoAdapter.UINT32.decode(reader)); break;
                    case 3: builder._result(ProtoAdapter.INT32.decode(reader)); break;
                    case 4: builder._msg(ProtoAdapter.STRING.decode(reader)); break;
                    case 5: builder.cmd.add(Cmd.ADAPTER.decode(reader)); break;
                    case 6: builder.prm.add(Prm.ADAPTER.decode(reader)); break;
                    case 7: builder._cycle(ProtoAdapter.UINT32.decode(reader)); break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public VCF_msg redact(VCF_msg value) {
            Builder builder = value.newBuilder();
            Internal.redactElements(builder.cmd, Cmd.ADAPTER);
            Internal.redactElements(builder.prm, Prm.ADAPTER);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}